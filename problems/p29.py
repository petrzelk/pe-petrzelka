#! /usr/bin/env python
# -*- coding: utf-8 -*-
'''Project Euler Problem 29: Distinct Powers

Problem Description:
Consider all integer combinations of a**b for 2 <= a <= 5 and 2 <= b <= 5:

2**2=4,  2**3=8,   2**4=16,  2**5=32
3**2=9,  3**3=27,  3**4=81,  3**5=243
4**2=16, 4**3=64,  4**4=256, 4**5=1024
5**2=25, 5**3=125, 5**4=625, 5**5=3125

If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:
4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125.
How many distinct terms are in the sequence generated by a**b for 2 <= a <= 100 and 2 <= b <= 100?

Functions:
None
'''

__date__ = "27 February 2020"

# Notes:
#
# Trivial


# Import statments
import sys, os
sys.path.insert(0, sys.path[0][:-sys.path[0][::-1].find('\\')-1])
from modules.project_euler_functions import *

# User defined functions


# Solutions
def p29(limit:int=100) -> int:
  """The solution.
  """
  result=set()
  for a,b in ((a,b) for a in range(2,limit+1) for b in range(2,limit+1)):
    result.add(a**b)
  return(len(result))


def p29alt():
  """Alternate solution.
  """
  pass


# Test cases
print(p29())
